name: STAGING backend

on:
  push:
    branches:
      - stage/backend

env:
  APP_NAME: tns-back-staging
  S3_BUCKET: tns-backend-staging-bucket
  AWS_REGION: us-east-2
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}


jobs:
  create_eb_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}
          echo "Creating Source Bundle"
          cat ./backend/Dockerfile.staging >> ./backend/Dockerfile
          cd ./backend
          zip -r ../${{env.APP_NAME}}.zip .
          cd ..
          
          S3_KEY="$AWS_VERSION_LABEL.zip"
          echo "Uploading Source Bundle to S3"
          aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/${S3_KEY} --region ${{env.AWS_REGION}}
          echo "Creating Elastic Beanstalk version"
          aws elasticbeanstalk create-application-version --application-name ${{env.APP_NAME}} --version-label $AWS_VERSION_LABEL --region ${{env.AWS_REGION}} --source-bundle S3Bucket=${{env.S3_BUCKET}},S3Key=${S3_KEY} --auto-create-application
  deploy_aws:
    needs: [create_eb_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9.4 (needed for eb cli)
        uses: actions/setup-python@v1
        with:
          python-version: "3.9.4"
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-id: ${{ secrets.AWS_ID }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy
        run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}
          echo "Installing Elastic Beanstalk Cli"
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version
          echo "Deploy init"
          eb init ${{env.APP_NAME}} -p ${{env.AWS_PLATFORM}} --region ${{env.AWS_REGION}}
          eb deploy ${{env.APP_NAME}} --version ${AWS_VERSION_LABEL}
          echo "Deploy finished"
